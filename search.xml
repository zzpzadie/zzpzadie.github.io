<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>3.安装React Developer Tools遇到的问题</title>
      <link href="/2024/05/24/react/%E9%85%8D%E7%BD%AE/%E5%AE%89%E8%A3%85React%20Developer%20Tools%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2024/05/24/react/%E9%85%8D%E7%BD%AE/%E5%AE%89%E8%A3%85React%20Developer%20Tools%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="npm克隆"><a href="#npm克隆" class="headerlink" title="npm克隆"></a>npm克隆</h1><p>我先直接npm克隆了，然后安装它的依赖啥的，结果我根本没办法build出，然后看网上说换新的版本，换了，还是不成功</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/facebook/react-devtools</span><br><span class="line"><span class="built_in">cd</span> react-devtools</span><br><span class="line"></span><br><span class="line">npm --registry https://registry.npm.taobao.org install</span><br><span class="line">npm run build:extension:chrome</span><br></pre></td></tr></table></figure><h1 id="下载了扩展版本"><a href="#下载了扩展版本" class="headerlink" title="下载了扩展版本"></a>下载了扩展版本</h1><p>直接下载下来就能拖到浏览器加载为扩展程序，好嘛，浏览器又报错：React 项目启动在 chrome 上报错 之 Uncaught TypeError: Cannot read property ‘forEach‘ of undefined<br><img src="/./image/reactdev.png"><br>说让我找到node_modules&#x2F;@pmmmwh&#x2F;react-refresh-webpack-plugin&#x2F;client&#x2F;ReactRefreshEntry.js这个文件夹把下面这段代码注释重启项目就能解决，<br>好嘛我连这个文件夹都没有，安装了依赖，清除缓存都没有</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">RefreshRuntime.injectIntoGlobalHook(safeThis);</span><br></pre></td></tr></table></figure><h1 id="换一个扩展程序版本"><a href="#换一个扩展程序版本" class="headerlink" title="换一个扩展程序版本"></a>换一个扩展程序版本</h1><p>网址：<a href="https://www.crx4chrome.com/crx/3068/">https://www.crx4chrome.com/crx/3068/</a><br>滑到下面下这个，我一开始看到差点下成广告的了，幸好进不去，嘿嘿<br><img src="/./image/download.png"><br>把之前的先关了，直接把新的拖进扩展程序即可，嘿，真不报错了，祝看到的你成功吧<br><img src="/./image/devexnew.png"></p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
          <category> 配置 </category>
          
          <category> React Developer Tools </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>接口</title>
      <link href="/2024/05/16/vue3/%E6%8E%A5%E5%8F%A3/"/>
      <url>/2024/05/16/vue3/%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="监听对象为多个，可以写成数组"><a href="#监听对象为多个，可以写成数组" class="headerlink" title="监听对象为多个，可以写成数组"></a>监听对象为多个，可以写成数组</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">watch(</span><br><span class="line">() =&gt; [a,b,c],</span><br><span class="line">(val) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (val) &#123;</span><br><span class="line">    d=a-b-c</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue3 </category>
          
          <category> 监听 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>监听</title>
      <link href="/2024/05/15/vue3/%E7%9B%91%E5%90%AC/"/>
      <url>/2024/05/15/vue3/%E7%9B%91%E5%90%AC/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="监听对象为多个，可以写成数组"><a href="#监听对象为多个，可以写成数组" class="headerlink" title="监听对象为多个，可以写成数组"></a>监听对象为多个，可以写成数组</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">watch(</span><br><span class="line">() =&gt; [a,b,c],</span><br><span class="line">(val) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (val) &#123;</span><br><span class="line">    d=a-b-c</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue3 </category>
          
          <category> 监听 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>上传按钮</title>
      <link href="/2024/05/15/vue3/%E4%B8%8A%E4%BC%A0%E6%8C%89%E9%92%AE/"/>
      <url>/2024/05/15/vue3/%E4%B8%8A%E4%BC%A0%E6%8C%89%E9%92%AE/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="表单中使用，传递文件对象："><a href="#表单中使用，传递文件对象：" class="headerlink" title="表单中使用，传递文件对象："></a>表单中使用，传递文件对象：</h1><p>action属性值为#,表示使用当前页面的URL作为上传的目标地址.action属性值为空字符串,表示需要手动指定上传的目标地址<br>show-file-list属性为false，表示不显示已上传文件的列表，默认不写为true<br>accept属性为.dat，表示只允许上传扩展名为.dat的文件<br>auto-upload属性为false，表示禁止自动上传文件<br>:http-request：<br>这是 Element UI 的 <el-upload> 组件的一个特殊属性，用于自定义文件上传的行为:你可以自定义请求的类型（如 GET、POST 等）、URL、数据格式和其他请求配置。<br>http-request 是 Element UI 特有的属性，不是 Vue.js 原生支持的属性。最终接口传递的文件对象是方法传递的对象中的file,方法只传递了一个对象,不能同时选中多个文件，但是可以后续出来再选择<br>:on-change：<br>这是 Vue.js 的原生自定义事件，用于监听组件的 change 事件。<br>:on-change 通常用于监听组件状态的变化，比如文件选择后的文件列表变化。<br>当设置 :on-change 属性时，你提供了一个方法（如 handleChange 函数），这个方法将在组件状态发生变化时被调用。<br>on-change 是 Vue.js 的事件监听系统的一部分，用于响应用户交互或其他导致数据变化的情境。最终接口传递的文件对象是方法传递的对象中的file,方法传递两个对象file和files，auto-upload属性为false，和change联合使用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;el-form-item label=<span class="string">&quot;&quot;</span> ref=<span class="string">&quot;fileList&quot;</span>&gt;</span><br><span class="line">          &lt;el-upload</span><br><span class="line">              ref=<span class="string">&quot;uploadRef&quot;</span></span><br><span class="line">              v-model:file-list=<span class="string">&quot;fileList&quot;</span></span><br><span class="line">              class=<span class="string">&quot;avatar-uploader&quot;</span></span><br><span class="line">              action=<span class="string">&quot;#&quot;</span></span><br><span class="line">              :show-file-list=<span class="string">&quot;false&quot;</span></span><br><span class="line">              :http-request=<span class="string">&quot;handleChange&quot;</span></span><br><span class="line">              :on-remove=<span class="string">&quot;handleRemove&quot;</span></span><br><span class="line">          &gt;</span><br><span class="line">            &lt;el-button <span class="built_in">type</span>=<span class="string">&quot;primary&quot;</span>&gt;上传文件&lt;/el-button&gt;</span><br><span class="line">          &lt;/el-upload&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br><span class="line">const fileList = reactive([]);//用reactive定义可以接收数据回显</span><br><span class="line"><span class="built_in">let</span> formData = &#123;&#125;</span><br><span class="line"><span class="keyword">function</span> handleChange(files) &#123;</span><br><span class="line">  <span class="built_in">let</span> file = files.file;</span><br><span class="line">  console.log(<span class="string">&#x27;file&#x27;</span>,file)</span><br><span class="line">  console.log(<span class="string">&#x27;files&#x27;</span>, files)</span><br><span class="line">  formData.value = new FormData();</span><br><span class="line">  formData.value.append(<span class="string">&quot;fzTmFile&quot;</span>, file);</span><br><span class="line">  fileup(formData.value).<span class="keyword">then</span>((res) =&gt; &#123;</span><br><span class="line">    if (res.code == <span class="number">200</span>) &#123;</span><br><span class="line">      let filedata = res.data</span><br><span class="line">      proxy.<span class="variable">$modal</span>.msgSuccess(&quot;上传文件成功！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vue3 </category>
          
          <category> 上传按钮 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2.组件ant的使用</title>
      <link href="/2024/05/14/react/%E9%85%8D%E7%BD%AE/%E7%BB%84%E4%BB%B6ant%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/05/14/react/%E9%85%8D%E7%BD%AE/%E7%BB%84%E4%BB%B6ant%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="安装-Antd-Design-和图标所需模块"><a href="#安装-Antd-Design-和图标所需模块" class="headerlink" title="安装 Antd Design,和图标所需模块"></a>安装 Antd Design,和图标所需模块</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install antd --save</span><br><span class="line">npm install --save @ant-design/icons</span><br></pre></td></tr></table></figure><h1 id="安装vite-plugin-style-import："><a href="#安装vite-plugin-style-import：" class="headerlink" title="安装vite-plugin-style-import："></a>安装vite-plugin-style-import：</h1><p>因为 vite 本身已经按需导入了组件库，所以只有样式不是按需导入的，所以只需按需导入样式即可。(安装引入总报错)</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i vite-plugin-style-import -D</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="引入：在vite-config里引入"><a href="#引入：在vite-config里引入" class="headerlink" title="引入：在vite.config里引入"></a>引入：在vite.config里引入</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
          <category> 配置 </category>
          
          <category> 组件ant的使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.react项目的初始化配置</title>
      <link href="/2024/05/14/react/%E9%85%8D%E7%BD%AE/%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/05/14/react/%E9%85%8D%E7%BD%AE/%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="启动：打开package-json，自命名启动端口号，和启动后自动打开"><a href="#启动：打开package-json，自命名启动端口号，和启动后自动打开" class="headerlink" title="启动：打开package.json，自命名启动端口号，和启动后自动打开"></a>启动：打开package.json，自命名启动端口号，和启动后自动打开</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;dev&quot;</span>: <span class="string">&quot;vite --host --port 2804 --open&quot;</span>,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="引入初始化样式，删除之前的，在main-js中引入"><a href="#引入初始化样式，删除之前的，在main-js中引入" class="headerlink" title="引入初始化样式，删除之前的，在main.js中引入"></a>引入初始化样式，删除之前的，在main.js中引入</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i reset-css</span><br></pre></td></tr></table></figure><h1 id="接下来，安装scss-css预处理器，方便我们书写js-开发工具只在开发环境有用，不会打包）："><a href="#接下来，安装scss-css预处理器，方便我们书写js-开发工具只在开发环境有用，不会打包）：" class="headerlink" title="接下来，安装scss(css预处理器，方便我们书写js,开发工具只在开发环境有用，不会打包）："></a>接下来，安装scss(css预处理器，方便我们书写js,开发工具只在开发环境有用，不会打包）：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i --save-dev sass</span><br></pre></td></tr></table></figure><h1 id="路径别名的配置："><a href="#路径别名的配置：" class="headerlink" title="路径别名的配置："></a>路径别名的配置：</h1><p>注：安装过程出现 reify:fsevents: timing reifyNode:node_modules&#x2F;@esbuild&#x2F;aix-ppc64 Completed<br>我还以为是出现了什么错其实就是一个日志记录。如果你看到这条信息，并不需要采取任何行动，它只是一个状态更新，表明npm或yarn在安装依赖时已经完成了某个步骤。耐心等待完成再执行下面的步骤吧</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> npm i -D @types/node</span><br><span class="line"> import path from <span class="string">&quot;path&quot;</span>;</span><br><span class="line"><span class="built_in">export</span> default defineConfig(&#123;</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    <span class="built_in">alias</span>: &#123;</span><br><span class="line">       // 设置别名</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>:</span><br><span class="line">          path.resolve(__dirname, <span class="string">&#x27;./src&#x27;</span>),</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="由于我提前安装了eslint-报错ESLint-‘-dirname’-is-not-defined-no-undef-，在-eslintrc-cjs中："><a href="#由于我提前安装了eslint-报错ESLint-‘-dirname’-is-not-defined-no-undef-，在-eslintrc-cjs中：" class="headerlink" title="由于我提前安装了eslint,报错ESLint: ‘__dirname’ is not defined.(no-undef)，在.eslintrc.cjs中："></a>由于我提前安装了eslint,报错ESLint: ‘__dirname’ is not defined.(no-undef)，在.eslintrc.cjs中：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  <span class="built_in">env</span>: &#123;</span><br><span class="line">    node: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如果path还是报错：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import path from <span class="string">&quot;path&quot;</span>;</span><br></pre></td></tr></table></figure><p>至此，就创建完成了一个属于我们的本地react项目啦<del>如果还想在项目中使用别的技术，请安装相应的依赖即可</del></p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
          <category> 配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2.Echart画任意条数折线图，可添加视图</title>
      <link href="/2024/05/10/vue3/Echarts/Echart%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE%E4%B8%80%E5%BC%A0%E5%9B%BE%E5%8F%AF%E6%B7%BB%E5%8A%A0%E4%BB%BB%E6%84%8F%E6%9D%A1%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%8F%AF%E6%B7%BB%E5%8A%A0%E8%A7%86%E5%9B%BE/"/>
      <url>/2024/05/10/vue3/Echarts/Echart%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE%E4%B8%80%E5%BC%A0%E5%9B%BE%E5%8F%AF%E6%B7%BB%E5%8A%A0%E4%BB%BB%E6%84%8F%E6%9D%A1%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%8F%AF%E6%B7%BB%E5%8A%A0%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=<span class="string">&quot;tc-container&quot;</span>&gt;</span><br><span class="line">    &lt;el-form</span><br><span class="line">        :model=<span class="string">&quot;queryParams&quot;</span></span><br><span class="line">        ref=<span class="string">&quot;queryRef&quot;</span></span><br><span class="line">        :inline=<span class="string">&quot;true&quot;</span></span><br><span class="line">        class=<span class="string">&quot;content-header-form&quot;</span></span><br><span class="line">        @submit.native.prevent</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-form-item label=<span class="string">&quot;&quot;</span> prop=<span class="string">&quot;&quot;</span> class=<span class="string">&quot;search&quot;</span>&gt;</span><br><span class="line">        &lt;tableselect</span><br><span class="line"></span><br><span class="line">            ref=<span class="string">&quot;tableselectRef&quot;</span></span><br><span class="line">            :parentoptions=<span class="string">&quot;searchList&quot;</span></span><br><span class="line">            @handleSearch=<span class="string">&quot;handleQuery&quot;</span></span><br><span class="line">            @resetQuery=<span class="string">&quot;resetQuery&quot;</span></span><br><span class="line">            :dateTime=<span class="string">&quot;true&quot;</span></span><br><span class="line">        &gt;&lt;/tableselect&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item class=<span class="string">&quot;button-item&quot;</span>&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">            <span class="built_in">type</span>=<span class="string">&quot;primary&quot;</span></span><br><span class="line">            icon=<span class="string">&quot;Download&quot;</span></span><br><span class="line">            @click=<span class="string">&quot;handleDownload&quot;</span></span><br><span class="line">        &gt;下载</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item v-if=<span class="string">&quot;!chartview&quot;</span> class=<span class="string">&quot;button-item&quot;</span>&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">            <span class="built_in">type</span>=<span class="string">&quot;primary&quot;</span></span><br><span class="line">            @click=<span class="string">&quot;handlechart&quot;</span></span><br><span class="line">        &gt;&lt;el-icon&gt;&lt;TrendCharts /&gt;&lt;/el-icon&gt;视图</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item v-if=<span class="string">&quot;chartview&quot;</span> class=<span class="string">&quot;button-item&quot;</span>&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">            <span class="built_in">type</span>=<span class="string">&quot;primary&quot;</span></span><br><span class="line">            @click=<span class="string">&quot;handletable&quot;</span></span><br><span class="line">        &gt;列表</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item v-if=<span class="string">&quot;chartview&quot;</span> class=<span class="string">&quot;button-item&quot;</span>&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">            <span class="built_in">type</span>=<span class="string">&quot;primary&quot;</span></span><br><span class="line">            @click=<span class="string">&quot;chartadd&quot;</span></span><br><span class="line">        &gt;添加视图</span><br><span class="line">        &lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">    &lt;el-table v-if=<span class="string">&quot;!chartview&quot;</span> v-loading=<span class="string">&quot;loading&quot;</span></span><br><span class="line">              :data=<span class="string">&quot;tableData&quot;</span>&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;参数名称&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;name&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;参数代号&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;code&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;设备标识&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;stationSymbol&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;告警级别&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;alarmLevel&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;解析时间&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;createTime&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;星上时间(UTC)&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;satelliteTime&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;数据采样时间&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;stationTime&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;源码&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;aryValue&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      &gt;</span><br><span class="line"></span><br><span class="line">        &lt;template <span class="comment">#header&gt;</span></span><br><span class="line">          &lt;div class=<span class="string">&quot;slotBox&quot;</span>&gt;</span><br><span class="line">            &lt;span&gt;源码&lt;/span&gt;</span><br><span class="line">            &lt;el-select</span><br><span class="line">                v-model=<span class="string">&quot;search&quot;</span></span><br><span class="line">                class=<span class="string">&quot;m-2&quot;</span></span><br><span class="line">                placeholder=<span class="string">&quot;Select&quot;</span></span><br><span class="line">                size=<span class="string">&quot;small&quot;</span></span><br><span class="line">                @change=<span class="string">&quot;selectVal&quot;</span></span><br><span class="line">                style=<span class="string">&quot;width: 80px; margin-left: 0.1rem&quot;</span></span><br><span class="line">            &gt;</span><br><span class="line">              &lt;el-option</span><br><span class="line">                  v-for=<span class="string">&quot;item in scaleOptions&quot;</span></span><br><span class="line">                  :key=<span class="string">&quot;item.value&quot;</span></span><br><span class="line">                  :label=<span class="string">&quot;item.label&quot;</span></span><br><span class="line">                  :value=<span class="string">&quot;item.value&quot;</span></span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/el-select&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">          label=<span class="string">&quot;解析值&quot;</span></span><br><span class="line">          align=<span class="string">&quot;center&quot;</span></span><br><span class="line">          prop=<span class="string">&quot;value&quot;</span></span><br><span class="line">          :show-overflow-tooltip=<span class="string">&quot;true&quot;</span></span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">      &lt;div v-if=<span class="string">&quot;chartview&quot;</span> v-for=<span class="string">&quot;(item,index) in chartList&quot;</span> :key=<span class="string">&quot;index+1&quot;</span> class=<span class="string">&quot;chart-container&quot;</span> style=<span class="string">&quot;width: 100%; height: 100%&quot;</span>&gt;</span><br><span class="line">        &lt;div class=<span class="string">&quot;right_chart&quot;</span> :<span class="built_in">id</span>=<span class="string">&quot;&#x27;lineRef&#x27;+item.chartid&quot;</span> style=<span class="string">&quot;width: 100%;height: 100%&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">      &lt;!--      &lt;div class=<span class="string">&quot;right_chart&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;chartTwo&quot;</span> style=<span class="string">&quot;width: 50%;height:300px&quot;</span>&gt;&lt;/div&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;div class=<span class="string">&quot;selected-one&quot;</span> style=<span class="string">&quot;width: 50%;height:50px&quot;</span>&gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;el-select--&gt;</span><br><span class="line">      &lt;!--            v-model=<span class="string">&quot;paramId&quot;</span>--&gt;</span><br><span class="line">      &lt;!--            placeholder=<span class="string">&quot;请选择参数&quot;</span>--&gt;</span><br><span class="line">      &lt;!--            @change=<span class="string">&quot;changeparam&quot;</span>--&gt;</span><br><span class="line">      &lt;!--        &gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option value&gt;请选择&lt;/el-option&gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option key=<span class="string">&quot;1&quot;</span> label=<span class="string">&quot;是&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option key=<span class="string">&quot;0&quot;</span> label=<span class="string">&quot;否&quot;</span> value=<span class="string">&quot;0&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--&amp;lt;!&amp;ndash;          &lt;el-option&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--&amp;lt;!&amp;ndash;              v-for=<span class="string">&quot;item in enterpriseList&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--&amp;lt;!&amp;ndash;              :key=<span class="string">&quot;&#x27;enterprise&#x27; + item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--&amp;lt;!&amp;ndash;              :label=<span class="string">&quot;item.companyName&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--&amp;lt;!&amp;ndash;              :value=<span class="string">&quot;item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--&amp;lt;!&amp;ndash;          &gt;&lt;/el-option&gt;&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;/el-select&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;/div&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;div class=<span class="string">&quot;selected-one&quot;</span> style=<span class="string">&quot;width: 50%;height:50px&quot;</span>&gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;el-select--&gt;</span><br><span class="line">      &lt;!--            v-model=<span class="string">&quot;paramId&quot;</span>--&gt;</span><br><span class="line">      &lt;!--            placeholder=<span class="string">&quot;请选择企业空间&quot;</span>--&gt;</span><br><span class="line">      &lt;!--            @change=<span class="string">&quot;changeparam&quot;</span>--&gt;</span><br><span class="line">      &lt;!--        &gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option value&gt;请选择&lt;/el-option&gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option key=<span class="string">&quot;1&quot;</span> label=<span class="string">&quot;是&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option key=<span class="string">&quot;0&quot;</span> label=<span class="string">&quot;否&quot;</span> value=<span class="string">&quot;0&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;          &lt;el-option&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              v-for=<span class="string">&quot;item in enterpriseList&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              :key=<span class="string">&quot;&#x27;enterprise&#x27; + item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              :label=<span class="string">&quot;item.companyName&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              :value=<span class="string">&quot;item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;          &gt;&lt;/el-option&gt;&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;/el-select&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;/div&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;div class=<span class="string">&quot;right_chart&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;chartThree&quot;</span> style=<span class="string">&quot;width: 50%;height:300px&quot;</span>&gt;&lt;/div&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;div class=<span class="string">&quot;right_chart&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;chartFour&quot;</span> style=<span class="string">&quot;width: 50%;height:300px&quot;</span>&gt;&lt;/div&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;div class=<span class="string">&quot;selected-one&quot;</span> style=<span class="string">&quot;width: 50%;height:50px&quot;</span>&gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;el-select--&gt;</span><br><span class="line">      &lt;!--            v-model=<span class="string">&quot;paramId&quot;</span>--&gt;</span><br><span class="line">      &lt;!--            placeholder=<span class="string">&quot;请选择企业空间&quot;</span>--&gt;</span><br><span class="line">      &lt;!--            @change=<span class="string">&quot;changeparam&quot;</span>--&gt;</span><br><span class="line">      &lt;!--        &gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option value&gt;请选择&lt;/el-option&gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option key=<span class="string">&quot;1&quot;</span> label=<span class="string">&quot;是&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--          &lt;el-option key=<span class="string">&quot;0&quot;</span> label=<span class="string">&quot;否&quot;</span> value=<span class="string">&quot;0&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;          &lt;el-option&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              v-for=<span class="string">&quot;item in enterpriseList&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              :key=<span class="string">&quot;&#x27;enterprise&#x27; + item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              :label=<span class="string">&quot;item.companyName&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;              :value=<span class="string">&quot;item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--          &amp;lt;!&amp;ndash;          &gt;&lt;/el-option&gt;&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;/el-select&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;/div&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;div class=<span class="string">&quot;selected-one&quot;</span> style=<span class="string">&quot;width: 50%;height:50px&quot;</span>&gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;el-select--&gt;</span><br><span class="line">      &lt;!--          v-model=<span class="string">&quot;paramId&quot;</span>--&gt;</span><br><span class="line">      &lt;!--          placeholder=<span class="string">&quot;请选择企业空间&quot;</span>--&gt;</span><br><span class="line">      &lt;!--          @change=<span class="string">&quot;changeparam&quot;</span>--&gt;</span><br><span class="line">      &lt;!--      &gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;el-option value&gt;请选择&lt;/el-option&gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;el-option key=<span class="string">&quot;1&quot;</span> label=<span class="string">&quot;是&quot;</span> value=<span class="string">&quot;1&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--        &lt;el-option key=<span class="string">&quot;0&quot;</span> label=<span class="string">&quot;否&quot;</span> value=<span class="string">&quot;0&quot;</span>/&gt;--&gt;</span><br><span class="line">      &lt;!--        &amp;lt;!&amp;ndash;          &lt;el-option&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &amp;lt;!&amp;ndash;              v-for=<span class="string">&quot;item in enterpriseList&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &amp;lt;!&amp;ndash;              :key=<span class="string">&quot;&#x27;enterprise&#x27; + item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &amp;lt;!&amp;ndash;              :label=<span class="string">&quot;item.companyName&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &amp;lt;!&amp;ndash;              :value=<span class="string">&quot;item.compId&quot;</span>&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--        &amp;lt;!&amp;ndash;          &gt;&lt;/el-option&gt;&amp;ndash;&amp;gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;/el-select&gt;--&gt;</span><br><span class="line">      &lt;!--      &lt;/div&gt;--&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;pagination</span><br><span class="line">        v-show=<span class="string">&quot;total &gt; 0 &amp;&amp; !chartview&quot;</span></span><br><span class="line">        :total=<span class="string">&quot;total&quot;</span></span><br><span class="line">        v-model:page=<span class="string">&quot;queryParams.pageNum&quot;</span></span><br><span class="line">        v-model:<span class="built_in">limit</span>=<span class="string">&quot;queryParams.pageSize&quot;</span></span><br><span class="line">        @pagination=<span class="string">&quot;getTrList&quot;</span></span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;copyrightbottom v-if=<span class="string">&quot;!chartview&quot;</span>/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Sortable from <span class="string">&quot;sortablejs&quot;</span>;</span><br><span class="line">import * as API from <span class="string">&quot;@/api/telemetering/tm_api.js&quot;</span>;</span><br><span class="line">import &#123;nextTick, onMounted, reactive, ref, watch&#125; from <span class="string">&quot;vue&quot;</span>;</span><br><span class="line">import qs from <span class="string">&quot;qs&quot;</span>;</span><br><span class="line">import usePermissionStore from <span class="string">&quot;@/store/modules/permission&quot;</span>;</span><br><span class="line">import tableselect from <span class="string">&quot;@/components/system/table-select.vue&quot;</span>;</span><br><span class="line">import &#123;getStationList&#125; from <span class="string">&quot;@/api/telestation/api&quot;</span>;</span><br><span class="line">import Copyrightbottom from <span class="string">&quot;@/components/copyrightbottom/index.vue&quot;</span>;</span><br><span class="line">import * as echarts from <span class="string">&quot;echarts&quot;</span>;</span><br><span class="line">import Pagination from <span class="string">&quot;@/components/Pagination/index.vue&quot;</span>;</span><br><span class="line">import edit from <span class="string">&quot;@/views/satellite/telemetering/TelemetryAnalysis/edit.vue&quot;</span>;</span><br><span class="line">import &#123;cloneDeepAndFormat&#125; from <span class="string">&quot;@/packages/utils&quot;</span>;</span><br><span class="line">import &#123;<span class="built_in">set</span>&#125; from <span class="string">&quot;xe-utils&quot;</span>;</span><br><span class="line">const chartview = ref(<span class="literal">false</span>)</span><br><span class="line">const router = useRouter();</span><br><span class="line">const total = ref(0);</span><br><span class="line">const routeParams = ref([])</span><br><span class="line">const optionOne = ref(&#123;</span><br><span class="line">  title: &#123;</span><br><span class="line">    text: <span class="string">&#x27;遥测结果&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  legend: &#123;</span><br><span class="line">    data:[]</span><br><span class="line">  &#125;,</span><br><span class="line">  tooltip: &#123;</span><br><span class="line">    trigger: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  xAxis: &#123;</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">&#x27;category&#x27;</span> ,</span><br><span class="line">    boundaryGap: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  yAxis: &#123;</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">&#x27;category&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  dataZoom: &#123;</span><br><span class="line">    show: <span class="literal">true</span>,</span><br><span class="line">    start: 0,</span><br><span class="line">    end: 100</span><br><span class="line">  &#125;,</span><br><span class="line">  grid: &#123; top: <span class="string">&#x27;15%&#x27;</span> &#125;,</span><br><span class="line">  series: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">      // smooth: <span class="literal">true</span>,</span><br><span class="line">      // seriesLayoutBy: <span class="string">&#x27;row&#x27;</span>,</span><br><span class="line">      // connectNulls:<span class="literal">true</span>,</span><br><span class="line">      // emphasis: &#123; focus: <span class="string">&#x27;series&#x27;</span> &#125;,</span><br><span class="line">      data: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">      // smooth: <span class="literal">true</span>,</span><br><span class="line">      // seriesLayoutBy: <span class="string">&#x27;row&#x27;</span>,</span><br><span class="line">      // connectNulls:<span class="literal">true</span>,</span><br><span class="line">      // emphasis: &#123; focus: <span class="string">&#x27;series&#x27;</span> &#125;,</span><br><span class="line">      data: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">      // smooth: <span class="literal">true</span>,</span><br><span class="line">      // seriesLayoutBy: <span class="string">&#x27;row&#x27;</span>,</span><br><span class="line">      // connectNulls:<span class="literal">true</span>,</span><br><span class="line">      // emphasis: &#123; focus: <span class="string">&#x27;series&#x27;</span> &#125;,</span><br><span class="line">      data: []</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">      // smooth: <span class="literal">true</span>,</span><br><span class="line">      // seriesLayoutBy: <span class="string">&#x27;row&#x27;</span>,</span><br><span class="line">      // connectNulls:<span class="literal">true</span>,</span><br><span class="line">      // emphasis: &#123; focus: <span class="string">&#x27;series&#x27;</span> &#125;,</span><br><span class="line">      data: []</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line">const arr1 = ref(&#123;</span><br><span class="line">  title: &#123;</span><br><span class="line">    text: <span class="string">&#x27;遥测结果&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  legend: &#123;</span><br><span class="line">    data:[]</span><br><span class="line">  &#125;,</span><br><span class="line">  tooltip: &#123;</span><br><span class="line">    trigger: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  xAxis: &#123;</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">&#x27;category&#x27;</span> ,</span><br><span class="line">    boundaryGap: <span class="literal">false</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  yAxis: &#123;</span><br><span class="line">    <span class="built_in">type</span>: <span class="string">&#x27;category&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  dataZoom: &#123;</span><br><span class="line">    show: <span class="literal">true</span>,</span><br><span class="line">    start: 0,</span><br><span class="line">    end: 100</span><br><span class="line">  &#125;,</span><br><span class="line">  grid: &#123; top: <span class="string">&#x27;15%&#x27;</span> &#125;,</span><br><span class="line">  series: [</span><br><span class="line">    &#123;</span><br><span class="line">      name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">      // smooth: <span class="literal">true</span>,</span><br><span class="line">      // seriesLayoutBy: <span class="string">&#x27;row&#x27;</span>,</span><br><span class="line">      // connectNulls:<span class="literal">true</span>,</span><br><span class="line">      // emphasis: &#123; focus: <span class="string">&#x27;series&#x27;</span> &#125;,</span><br><span class="line">      data: []</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line">// <span class="built_in">let</span> mychartOne = &#123;&#125;</span><br><span class="line"></span><br><span class="line">const permissionStore = usePermissionStore();</span><br><span class="line">const &#123;proxy&#125; = getCurrentInstance();</span><br><span class="line">const search = ref(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">const tabNum = ref(0);</span><br><span class="line">const scaleOptions = [</span><br><span class="line">  &#123;</span><br><span class="line">    value: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    label: <span class="string">&quot;二进制&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: <span class="string">&quot;10&quot;</span>,</span><br><span class="line">    label: <span class="string">&quot;十进制&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    value: <span class="string">&quot;16&quot;</span>,</span><br><span class="line">    label: <span class="string">&quot;十六进制&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">const paramId = ref(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">const loading = ref(<span class="literal">false</span>);</span><br><span class="line">const tableData = ref([])</span><br><span class="line">const data = reactive(&#123;</span><br><span class="line">  queryParams: &#123;</span><br><span class="line">    code: undefined,</span><br><span class="line">    <span class="built_in">date</span>: undefined,</span><br><span class="line">    startTime: undefined,</span><br><span class="line">    endTime: undefined,</span><br><span class="line">    pageNum: 1,</span><br><span class="line">    pageSize: 10,</span><br><span class="line">  &#125;,</span><br><span class="line">  searchList: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">id</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      value: <span class="string">&quot;code&quot;</span>,</span><br><span class="line">      label: <span class="string">&quot;参数代号&quot;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&quot;select&quot;</span>,</span><br><span class="line">      options: [],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">id</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">      value: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">      label: <span class="string">&quot;参数名称&quot;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&quot;input&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">id</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">      value: <span class="string">&quot;date&quot;</span>,</span><br><span class="line">      label: <span class="string">&quot;起止时间&quot;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&quot;datepicker&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">id</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">      value: <span class="string">&quot;delay&quot;</span>,</span><br><span class="line">      label: <span class="string">&quot;遥测状态&quot;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&quot;select&quot;</span>,</span><br><span class="line">      options: [</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">&quot;延迟遥测&quot;</span>,</span><br><span class="line">          value: <span class="string">&quot;true&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          label: <span class="string">&quot;实时遥测&quot;</span>,</span><br><span class="line">          value: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">id</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">      value: <span class="string">&quot;stationSymbol&quot;</span>,</span><br><span class="line">      label: <span class="string">&quot;设备&quot;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&quot;select&quot;</span>,</span><br><span class="line">      options: [],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">id</span>: <span class="string">&quot;6&quot;</span>,</span><br><span class="line">      value: <span class="string">&quot;alarmLevel&quot;</span>,</span><br><span class="line">      label: <span class="string">&quot;告警级别&quot;</span>,</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&quot;select&quot;</span>,</span><br><span class="line">      options: [</span><br><span class="line">        &#123;</span><br><span class="line">          value: <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">          label: <span class="string">&#x27;未告警&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          value: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">          label: <span class="string">&#x27;一级告警&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          value: <span class="string">&#x27;2&#x27;</span>,</span><br><span class="line">          label: <span class="string">&#x27;二级告警&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          value: <span class="string">&#x27;3&#x27;</span>,</span><br><span class="line">          label: <span class="string">&#x27;三级告警&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">let</span> &#123;queryParams, searchList,&#125; = toRefs(data);</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  getParamList();</span><br><span class="line">  getTrList();</span><br><span class="line">  // initSortable();</span><br><span class="line">  getStationListuser()</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 视图</span><br><span class="line">function handlechart() &#123;</span><br><span class="line">  chartview.value = true</span><br><span class="line">  console.log(&#x27;<span class="number">1111</span>&#x27;,chartview.value)</span><br><span class="line">  set(chartList,<span class="number">0</span>,&#123;chartid:&#x27;chartOne&#x27;,arr:cloneDeepAndFormat(arr1.value)&#125;)</span><br><span class="line">  getTrList()</span><br><span class="line">&#125;</span><br><span class="line">const chartList = reactive([&#123;</span><br><span class="line">  chartid:&#x27;chartOne&#x27;,</span><br><span class="line">  arr:[]</span><br><span class="line">&#125;])</span><br><span class="line">const lineList = ref([<span class="number">0</span>])</span><br><span class="line">const mychartlList = ref([])</span><br><span class="line">//添加视图</span><br><span class="line">function chartadd()&#123;</span><br><span class="line">  console.log(&#x27;jiaijiajiai&#x27;)</span><br><span class="line">  chartnumber.value = chartnumber.value + <span class="number">1</span></span><br><span class="line">  console.log(&#x27;chartnumber.value-<span class="number">1</span>]&#x27;,chartnumber.value)</span><br><span class="line">  set(chartList,chartnumber.value-<span class="number">1</span>,&#123;chartid:Math.random(),arr:cloneDeepAndFormat(arr1.value)&#125;)</span><br><span class="line">  console.log(&#x27;chartList[chartnumber.value-<span class="number">1</span>]&#x27;,chartList)</span><br><span class="line">  lineChartOne()</span><br><span class="line">&#125;</span><br><span class="line">const chartnumber = ref(<span class="number">1</span>);</span><br><span class="line">let arr2 = &#123;&#125;;</span><br><span class="line">let arr3 = &#123;&#125;;</span><br><span class="line">let arr4 = &#123;&#125;;</span><br><span class="line">function lineChartOne() &#123;</span><br><span class="line">  setTimeout(function () &#123;</span><br><span class="line">    if (chartnumber.value == <span class="number">1</span>)&#123;</span><br><span class="line">      // let mychartOne = &#123;&#125;</span><br><span class="line">      if (lineList.value[chartnumber.value-<span class="number">1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">        mychartlList.value[<span class="number">0</span>] = echarts.init(document.getElementById(&#x27;lineRef&#x27;+&#x27;chartOne&#x27;))</span><br><span class="line">      &#125;</span><br><span class="line">      console.log(<span class="string">&#x27;数组一&#x27;</span>,chartList[chartnumber.value-1].arr)</span><br><span class="line">      mychartlList.value[0].setOption(chartList[chartnumber.value-1].arr)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!lineList.value[chartnumber.value-1])&#123;</span><br><span class="line">        lineList.value[chartnumber.value-1]=0</span><br><span class="line">        mychartlList.value[chartnumber.value-1] = echarts.init(document.getElementById(<span class="string">&#x27;lineRef&#x27;</span>+chartList[chartnumber.value-1].chartid))</span><br><span class="line">        console.log(<span class="string">&#x27;二初始化&#x27;</span>,mychartlList.value)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">let</span> abb=chartList[chartnumber.value-1].arr</span><br><span class="line">      console.log(<span class="string">&#x27;数组二&#x27;</span>,abb)</span><br><span class="line">      mychartlList.value[chartnumber.value-1].setOption(abb,<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,1000)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">lineChartTwo</span></span>() &#123;</span><br><span class="line">  console.log(<span class="string">&#x27;2222222&#x27;</span>)</span><br><span class="line">  setTimeout(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    <span class="built_in">let</span> mychartTwo = echarts.init(document.getElementById(<span class="string">&#x27;lineRef&#x27;</span>+chartList[1]))</span><br><span class="line">    mychartTwo.setOption(arr2.value)</span><br><span class="line">  &#125;,1000)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">lineChartThree</span></span>() &#123;</span><br><span class="line">  console.log(<span class="string">&#x27;3333333333&#x27;</span>)</span><br><span class="line">  setTimeout(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    <span class="built_in">let</span> mychartThree = echarts.init(document.getElementById(<span class="string">&#x27;lineRef&#x27;</span>+chartList[2]))</span><br><span class="line">    mychartThree.setOption(arr3.value)</span><br><span class="line">  &#125;,1000)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">lineChartFour</span></span>() &#123;</span><br><span class="line">  console.log(<span class="string">&#x27;4444444444444444444&#x27;</span>)</span><br><span class="line">  setTimeout(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    <span class="built_in">let</span> mychartFour = echarts.init(document.getElementById(<span class="string">&#x27;lineRef&#x27;</span>+chartList[3]))</span><br><span class="line">    mychartFour.setOption(arr4.value)</span><br><span class="line">  &#125;,1000)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 视图</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">handletable</span></span>() &#123;</span><br><span class="line">  chartview.value = <span class="literal">false</span></span><br><span class="line">  console.log(<span class="string">&#x27;1111&#x27;</span>,chartview.value)</span><br><span class="line">  queryParams.value.pageSize = 10</span><br><span class="line">  getTrList()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/** 获取测站列表 */</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">getStationListuser</span></span>() &#123;</span><br><span class="line">  <span class="built_in">let</span> params = &#123;&#125;;</span><br><span class="line">  params.companyId = permissionStore.perSpaceId;</span><br><span class="line">  getStationList(params).<span class="keyword">then</span>(res =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.code == 200) &#123;</span><br><span class="line">      searchList.value[4].options = [];</span><br><span class="line">      console.log(<span class="string">&#x27;测站列表&#x27;</span>,res.rows)</span><br><span class="line">      res.rows.forEach((item) =&gt; &#123;</span><br><span class="line">        searchList.value[<span class="number">4</span>].options.push(&#123;</span><br><span class="line">          value: item.sign,</span><br><span class="line">          label: item.name,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** 搜索按钮操作 */</span><br><span class="line">function handleQuery(action) &#123;</span><br><span class="line">  queryParams.value = &#123;</span><br><span class="line">    code: undefined,</span><br><span class="line">    date: undefined,</span><br><span class="line">    startTime: undefined,</span><br><span class="line">    endTime: undefined,</span><br><span class="line">  &#125;</span><br><span class="line">  formatSearchParams(action);</span><br><span class="line">  queryParams.value.pageNum = <span class="number">1</span>;</span><br><span class="line">  queryParams.value.pageSize = <span class="number">10</span>;</span><br><span class="line">  getTrList();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function handleDownload() &#123;</span><br><span class="line">  console.log(queryParams.value)</span><br><span class="line">  let param = &#123;</span><br><span class="line">    satelliteId: permissionStore.spaceId,</span><br><span class="line">    code: queryParams.value.code,</span><br><span class="line">    startTime: queryParams.value.date ? queryParams.value.date[<span class="number">0</span>] : undefined,</span><br><span class="line">    endTime: queryParams.value.date ? queryParams.value.date[<span class="number">1</span>] : undefined</span><br><span class="line">  &#125;</span><br><span class="line">  if (param.startTime &amp;&amp; param.endTime &amp;&amp; param.code) &#123;</span><br><span class="line">    console.log(param)</span><br><span class="line">    proxy.download(&quot;datastorage/tmResults/export&quot;, &#123;</span><br><span class="line">      ...param,</span><br><span class="line">    &#125;, `<span class="variable">$&#123;param.code+ &#x27;遥测结果&#x27; + new Date().getTime()&#125;</span>.xlsx`);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    proxy.<span class="variable">$modal</span>.msgError(&quot;请选择时间与参数代号&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//进制切换</span><br><span class="line">function selectVal(val) &#123;</span><br><span class="line">  tableData.value.forEach((element) =&gt; &#123;</span><br><span class="line">    element.aryValue = transitionVal(element.binValue, val);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function transitionVal(binValue, ary) &#123;</span><br><span class="line">  let newVal = null;</span><br><span class="line">  if (!isNaN(binValue)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (ary == <span class="string">&quot;10&quot;</span>) &#123;</span><br><span class="line">      newVal = Number.parseInt(binValue, 2);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ary == <span class="string">&quot;16&quot;</span>) &#123;</span><br><span class="line">      newVal = Number.parseInt(binValue, 2).toString(16);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ary == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">      newVal = binValue;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">return</span> newVal;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** 格式化搜索框子组件传递过来的参数 */</span><br><span class="line"><span class="keyword">function</span> formatSearchParams(action) &#123;</span><br><span class="line">  <span class="keyword">if</span> (action &amp;&amp; action.length &gt; 0) &#123;</span><br><span class="line">    action.forEach((item) =&gt; &#123;</span><br><span class="line">      let order = item.indexOf(&quot;:&quot;);</span><br><span class="line">      let name = item.substring(<span class="number">0</span>, order);</span><br><span class="line">      let value = item.substring(order + <span class="number">1</span>, item.length);</span><br><span class="line">      switch (name) &#123;</span><br><span class="line">        case &quot;参数代号&quot;:</span><br><span class="line">          queryParams.value.code = searchList.value[<span class="number">0</span>].options.filter(</span><br><span class="line">              (item) =&gt; item.label == value</span><br><span class="line">          )[<span class="number">0</span>].value;</span><br><span class="line">          break;</span><br><span class="line">        case &quot;参数名称&quot;:</span><br><span class="line">          queryParams.value.name = value;</span><br><span class="line">          break;</span><br><span class="line">        case &quot;起止时间&quot;:</span><br><span class="line">          queryParams.value.date = [</span><br><span class="line">            value.substring(<span class="number">0</span>, <span class="number">19</span>),</span><br><span class="line">            value.substring(<span class="number">20</span>),</span><br><span class="line">          ];</span><br><span class="line">          break;</span><br><span class="line">        case &quot;遥测状态&quot;:</span><br><span class="line">          queryParams.value.delay = value;</span><br><span class="line">          break;</span><br><span class="line">        case &quot;设备&quot;:</span><br><span class="line">          queryParams.value.stationSymbol = value;</span><br><span class="line">          break;</span><br><span class="line">        case &quot;告警级别&quot;:</span><br><span class="line">          console.log(value)</span><br><span class="line">          queryParams.value.alarmLevel = value;</span><br><span class="line">          break;</span><br><span class="line">        default:</span><br><span class="line">          break;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    queryParams.value = &#123;&#125;;</span><br><span class="line">    queryParams.value.pageNum = <span class="number">1</span>;</span><br><span class="line">    queryParams.value.pageSize = <span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** 重置按钮操作 */</span><br><span class="line">function resetQuery() &#123;</span><br><span class="line">  proxy.resetForm(&quot;queryRef&quot;);</span><br><span class="line">  handleQuery();</span><br><span class="line">  proxy.<span class="variable">$refs</span>[&quot;tableselectRef&quot;].clearTags();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** 获取遥测参数列表 */</span><br><span class="line">async function getParamList() &#123;</span><br><span class="line">  let param = &#123;satelliteId: permissionStore.spaceId&#125;;</span><br><span class="line">  let res = await API.listParam(qs.stringify(param, &#123;arrayFormat: &quot;repeat&quot;&#125;));</span><br><span class="line">  <span class="built_in">let</span> paramList = [];</span><br><span class="line">  <span class="keyword">if</span> (res?.code == 200) &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.rows.length != 0) &#123;</span><br><span class="line">      res.rows.forEach((element) =&gt; &#123;</span><br><span class="line">        paramList.push(&#123;</span><br><span class="line">          label: element.code,</span><br><span class="line">          value: element.code,</span><br><span class="line">          name: element.name</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">      searchList.value[<span class="number">0</span>].options = paramList;</span><br><span class="line">      console.log(&#x27;res.rows&#x27;,paramList)</span><br><span class="line">      tabNum.value++;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const line1 = ref(<span class="number">0</span>)</span><br><span class="line">const line2 = ref(<span class="number">0</span>)</span><br><span class="line">const line3 = ref(<span class="number">0</span>)</span><br><span class="line">const line4 = ref(<span class="number">0</span>)</span><br><span class="line">// 查询遥测结果列表</span><br><span class="line">async function getTrList() &#123;</span><br><span class="line">  let param = &#123;</span><br><span class="line">        satelliteId: permissionStore.spaceId,</span><br><span class="line">        code: queryParams.value.code,</span><br><span class="line">        startTime: queryParams.value.date ? queryParams.value.date[<span class="number">0</span>] : undefined,</span><br><span class="line">        endTime: queryParams.value.date ? queryParams.value.date[<span class="number">1</span>] : undefined,</span><br><span class="line">        pageNum: queryParams.value.pageNum,</span><br><span class="line">        pageSize: queryParams.value.pageSize,</span><br><span class="line">        name: queryParams.value.name,</span><br><span class="line">        delay: queryParams.value.delay,</span><br><span class="line">        stationSymbol: queryParams.value.stationSymbol,</span><br><span class="line">        alarmLevel: queryParams.value.alarmLevel</span><br><span class="line">      &#125;,</span><br><span class="line">      res = null,</span><br><span class="line">      resData = null;</span><br><span class="line">  loading.value = true;</span><br><span class="line">  const arr = Object.values(queryParams.value).filter(Boolean)</span><br><span class="line">  console.log(&#x27;arr&#x27;,arr)</span><br><span class="line">  if(arr.length &gt; <span class="number">3</span> )&#123;</span><br><span class="line">    if(chartview.value)&#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        res = await API.tmResultsList(</span><br><span class="line">            qs.stringify(param, &#123;arrayFormat: &quot;repeat&quot;&#125;)</span><br><span class="line">        );</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        loading.value = false;</span><br><span class="line">      &#125;</span><br><span class="line">      loading.value = false;</span><br><span class="line">      res.rows.forEach((element) =&gt; &#123;</span><br><span class="line">        element.aryValue = element.binValue;</span><br><span class="line">      &#125;);</span><br><span class="line">      resData = res.rows;</span><br><span class="line">      total.value = res.total;</span><br><span class="line">      tableData.value = resData;</span><br><span class="line">      let arra = [],arrb = []</span><br><span class="line">      if (tableData.value.length&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        console.log(&#x27;line&#x27;,lineList.value[chartnumber.value-<span class="number">1</span>])</span><br><span class="line">        console.log(&#x27;tableData.value&#x27;,tableData.value)</span><br><span class="line">        tableData.value.map(item =&gt;&#123;</span><br><span class="line">          arra.push(item.satelliteTime)</span><br><span class="line">          arrb.push(item.value)</span><br><span class="line">        &#125;)</span><br><span class="line">        console.log(arra,arrb)</span><br><span class="line">        if(chartnumber.value == <span class="number">1</span>)&#123;</span><br><span class="line">          console.log((&#x27;开始数据&#x27;))</span><br><span class="line">          lineList.value[chartnumber.value-1] = lineList.value[chartnumber.value-1] + 1</span><br><span class="line">          chartList[chartnumber.value-1].arr.series[lineList.value[chartnumber.value-1]-1]=&#123;</span><br><span class="line">            name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">            data: []</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">let</span> i=0;i&lt;arra.length;i++)&#123;</span><br><span class="line">            <span class="built_in">let</span> arrdata=[arra[i],arrb[i]]</span><br><span class="line">            chartList[chartnumber.value-1].arr.series[lineList.value[chartnumber.value-1]-1].data.push(arrdata)</span><br><span class="line">            console.log(<span class="string">&#x27;bianli&#x27;</span>,chartList)</span><br><span class="line">          &#125;</span><br><span class="line">          console.log(<span class="string">&#x27;chartList&#x27;</span>,chartList)</span><br><span class="line">          chartList[chartnumber.value-1].arr.series[lineList.value[chartnumber.value-1]-1].name = tableData.value[0].name</span><br><span class="line">          chartList[chartnumber.value-1].arr.legend.data.push(tableData.value[0].name)</span><br><span class="line">          lineChartOne()</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          lineList.value[chartnumber.value-1] = lineList.value[chartnumber.value-1] + 1</span><br><span class="line">          chartList[chartnumber.value-1].arr.series[lineList.value[chartnumber.value-1]-1]=&#123;</span><br><span class="line">            name: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">            data: []</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">for</span> (<span class="built_in">let</span> i=0;i&lt;arra.length;i++)&#123;</span><br><span class="line">            <span class="built_in">let</span> arrdata=[arra[i],arrb[i]]</span><br><span class="line">            chartList[chartnumber.value-1].arr.series[lineList.value[chartnumber.value-1]-1].data.push(arrdata)</span><br><span class="line">          &#125;</span><br><span class="line">          chartList[chartnumber.value-1].arr.series[lineList.value[chartnumber.value-1]-1].name = tableData.value[0].name</span><br><span class="line">          chartList[chartnumber.value-1].arr.legend.data.push(tableData.value[0].name)</span><br><span class="line">          lineChartOne()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        res = await API.tmResultsList(</span><br><span class="line">            qs.stringify(param, &#123;arrayFormat: <span class="string">&quot;repeat&quot;</span>&#125;)</span><br><span class="line">        );</span><br><span class="line">      &#125; catch (error) &#123;</span><br><span class="line">        loading.value = <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      loading.value = <span class="literal">false</span>;</span><br><span class="line">      res.rows.forEach((element) =&gt; &#123;</span><br><span class="line">        element.aryValue = element.binValue;</span><br><span class="line">      &#125;);</span><br><span class="line">      resData = res.rows;</span><br><span class="line">      total.value = res.total;</span><br><span class="line">      tableData.value = resData;</span><br><span class="line">      console.log(&#x27;没画图的表格数据&#x27;,tableData.value)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;else &#123;</span><br><span class="line">    proxy.<span class="variable">$modal</span>.msgWarning(&quot;请选择两条或以上查询条件&quot;)</span><br><span class="line">    loading.value = false;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 分页获取表结构</span><br><span class="line">function currentChange(val) &#123;</span><br><span class="line">  queryParams.value.pageNum = val.pageNum;</span><br><span class="line">  queryParams.value.pageSize = val.pageSize;</span><br><span class="line">  getTrList();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function initSortable() &#123;</span><br><span class="line">  let sortable;</span><br><span class="line">  // 拖动配置</span><br><span class="line">  const tbody = document.querySelector(&quot;.vxe-table--body tbody&quot;);</span><br><span class="line">  const ops = &#123;</span><br><span class="line">    animation: <span class="number">200</span>,</span><br><span class="line">    group: &quot;id&quot;,</span><br><span class="line">    handle: &quot;.col--seq&quot;, // handle&#x27;s class</span><br><span class="line">    // 拖动结束</span><br><span class="line">    onEnd: function (evt) &#123;</span><br><span class="line">      // 获取拖动后的排序，arr数组里的值是 data-id 的顺序</span><br><span class="line">      let arr = sortable.toArray();</span><br><span class="line">      console.log(&#123;evt, arr&#125;);</span><br><span class="line">      const currRow = tableData.value.splice(evt.oldIndex, <span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">      console.log(currRow);</span><br><span class="line">      tableData.value.splice(evt.newIndex, <span class="number">0</span>, currRow);</span><br><span class="line">      console.log(Array.from(tableData.value));</span><br><span class="line">      //   拖动后获取newIdex</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  //初始化</span><br><span class="line">  sortable = Sortable.create(tbody, ops);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span> scoped&gt;</span><br><span class="line">.tc-container &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line"></span><br><span class="line">  .tc-container-table &#123;</span><br><span class="line">    height: calc(100% - 52px);</span><br><span class="line">    width: 100%;</span><br><span class="line"></span><br><span class="line">    .content-header-form &#123;</span><br><span class="line">      width: 90%;</span><br><span class="line">      background: transparent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .slotBox &#123;</span><br><span class="line">      display: inline-block;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .chart-container&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    .selected-one&#123;</span><br><span class="line">      width: 50%;</span><br><span class="line">      height: 50px;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Echart </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.Vue 不能检测变动的数组</title>
      <link href="/2024/05/08/vue3/Vue%20%E4%B8%8D%E8%83%BD%E6%A3%80%E6%B5%8B%E5%8F%98%E5%8A%A8%E7%9A%84%E6%95%B0%E7%BB%84/"/>
      <url>/2024/05/08/vue3/Vue%20%E4%B8%8D%E8%83%BD%E6%A3%80%E6%B5%8B%E5%8F%98%E5%8A%A8%E7%9A%84%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="当你利用索引直接设置一个项时，例如：vm-items-indexOfItem-newValue"><a href="#当你利用索引直接设置一个项时，例如：vm-items-indexOfItem-newValue" class="headerlink" title="当你利用索引直接设置一个项时，例如：vm.items[indexOfItem] &#x3D; newValue"></a>当你利用索引直接设置一个项时，例如：vm.items[indexOfItem] &#x3D; newValue</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span>(arr,index,&#123;age:12,name:<span class="string">&#x27;wee&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue 不能检测变动的数组 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.Echart-tooltips遇到的问题汇总</title>
      <link href="/2024/05/03/vue3/Echarts/Echarts-tooltips/"/>
      <url>/2024/05/03/vue3/Echarts/Echarts-tooltips/</url>
      
        <content type="html"><![CDATA[<h1 id="无法使用全局shallowRef，但是item效果达不到预期，用指示器"><a href="#无法使用全局shallowRef，但是item效果达不到预期，用指示器" class="headerlink" title="无法使用全局shallowRef，但是item效果达不到预期，用指示器"></a>无法使用全局shallowRef，但是item效果达不到预期，用指示器</h1><p>EChart 画图，由于初始化存储对象为组件传值对象，如果用全局shallowRef对象赋值，会每次mqtt更新视图，看起来像闪退，所以无法直接用shallowRef，<br>但是用item的tooltips,看起来效果没用那么好，所以可以用指示器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tooltip: &#123;</span><br><span class="line">    trigger: <span class="string">&quot;axis&quot;</span>,</span><br><span class="line">    axisPointer: &#123;</span><br><span class="line">      <span class="built_in">type</span>: <span class="string">&#x27;cross&#x27;</span>,          // 指示器类型</span><br><span class="line">      axis: <span class="string">&#x27;auto&#x27;</span>,          // 指示器的坐标轴</span><br><span class="line">      snap: <span class="literal">true</span>,            // 坐标轴指示器是否吸附到具体的数值点上</span><br><span class="line">      z: 1,                  // 坐标轴指示器的 z 值,图形层级</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Echart </category>
          
          <category> tooltips </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.深拷贝</title>
      <link href="/2024/04/30/vue3/%E6%B7%B1%E6%8B%B7%E8%B4%9D/"/>
      <url>/2024/04/30/vue3/%E6%B7%B1%E6%8B%B7%E8%B4%9D/</url>
      
        <content type="html"><![CDATA[<h1 id="利用JSON的序列化和反序列化来实现深拷贝。这种方法简单易用，但它不能处理函数、正则表达式、undefined、NaN等特殊值，也不能处理对象中的循环引用。"><a href="#利用JSON的序列化和反序列化来实现深拷贝。这种方法简单易用，但它不能处理函数、正则表达式、undefined、NaN等特殊值，也不能处理对象中的循环引用。" class="headerlink" title="利用JSON的序列化和反序列化来实现深拷贝。这种方法简单易用，但它不能处理函数、正则表达式、undefined、NaN等特殊值，也不能处理对象中的循环引用。"></a>利用JSON的序列化和反序列化来实现深拷贝。这种方法简单易用，但它不能处理函数、正则表达式、undefined、NaN等特殊值，也不能处理对象中的循环引用。</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arr1.value = JSON.parse(JSON.stringify(optionOne.value))</span><br></pre></td></tr></table></figure><h1 id="cloneDeepAndFormat可能还包含格式化的功能，这意味着它不仅复制对象，还可能对对象进行某种形式的处理或调整"><a href="#cloneDeepAndFormat可能还包含格式化的功能，这意味着它不仅复制对象，还可能对对象进行某种形式的处理或调整" class="headerlink" title="cloneDeepAndFormat可能还包含格式化的功能，这意味着它不仅复制对象，还可能对对象进行某种形式的处理或调整"></a>cloneDeepAndFormat可能还包含格式化的功能，这意味着它不仅复制对象，还可能对对象进行某种形式的处理或调整</h1><p>注：通常能够处理各种数据类型，包括函数、正则表达式、循环引用等</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">const nitem = cloneDeepAndFormat(item);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深拷贝 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.路由的使用</title>
      <link href="/2024/04/28/vue3/%E8%B7%AF%E7%94%B1/"/>
      <url>/2024/04/28/vue3/%E8%B7%AF%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="定义（路由）组件。可以从其他文件-import-进来"><a href="#定义（路由）组件。可以从其他文件-import-进来" class="headerlink" title="定义（路由）组件。可以从其他文件 import 进来"></a>定义（路由）组件。可以从其他文件 import 进来</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">const router = useRouter();</span><br></pre></td></tr></table></figure><h1 id="在路由文件里定义路由信息，最后一个文件夹用驼峰命名法"><a href="#在路由文件里定义路由信息，最后一个文件夹用驼峰命名法" class="headerlink" title="在路由文件里定义路由信息，最后一个文件夹用驼峰命名法"></a>在路由文件里定义路由信息，最后一个文件夹用驼峰命名法</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        path: <span class="string">&#x27;/TssTryEdit&#x27;</span>,</span><br><span class="line">        component: Layout,</span><br><span class="line">        hidden: <span class="literal">true</span>,</span><br><span class="line">        redirect: <span class="string">&#x27;noredirect&#x27;</span>,</span><br><span class="line">        children: [</span><br><span class="line">            &#123;</span><br><span class="line">                path: <span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">                component: () =&gt; import(<span class="string">&#x27;@/views/TssTry/edit.vue&#x27;</span>),</span><br><span class="line">                name: <span class="string">&#x27;TssTryEdit&#x27;</span>,</span><br><span class="line">                meta: &#123;title: <span class="string">&#x27;XX&#x27;</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h1 id="引用路由"><a href="#引用路由" class="headerlink" title="引用路由"></a>引用路由</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">router.push(&#123;</span><br><span class="line">    name: <span class="string">&quot;TssTryEdit&quot;</span>,</span><br><span class="line">     query: &#123;</span><br><span class="line">     </span><br><span class="line">     &#125;,</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 路由的使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.值的类型转换</title>
      <link href="/2024/04/26/vue3/%E5%80%BC%E7%9A%84%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
      <url>/2024/04/26/vue3/%E5%80%BC%E7%9A%84%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="对象转数组，同时筛选不为空的值"><a href="#对象转数组，同时筛选不为空的值" class="headerlink" title="对象转数组，同时筛选不为空的值"></a>对象转数组，同时筛选不为空的值</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Object.values(<span class="string">&quot;对象&quot;</span>).filter(Boolean)</span><br></pre></td></tr></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 值的类型转换 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.Echart画折线图遇到的问题汇总</title>
      <link href="/2024/04/25/vue3/Echarts/Echart%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
      <url>/2024/04/25/vue3/Echarts/Echart%E7%94%BB%E6%8A%98%E7%BA%BF%E5%9B%BE%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="EChart-配置都写好了，但是无法显示图表：报错–index-vue-167-Can’t-get-DOM-width-or-height-Please-check-dom-clientWidth-an"><a href="#EChart-配置都写好了，但是无法显示图表：报错–index-vue-167-Can’t-get-DOM-width-or-height-Please-check-dom-clientWidth-an" class="headerlink" title="EChart 配置都写好了，但是无法显示图表：报错–index.vue:167 Can’t get DOM width or height. Please check dom.clientWidth an"></a>EChart 配置都写好了，但是无法显示图表：报错–index.vue:167 Can’t get DOM width or height. Please check dom.clientWidth an</h1><p>解决方法：<br>设置高度和宽度，在onMounted内添加clientWidth和clientHeight，chartOne是图层id；<br>如果不在onMounted内添加， 则会出现无法重复使用lineChartOne()的问题；<br>echarts.init也要写在这里面，写在lineChartOne()里会报错重复初始化了</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  initData();</span><br><span class="line">  Object.defineProperty(document.getElementById(&#x27;chartOne&#x27;),&#x27;clientWidth&#x27;,&#123;get:function()&#123;return <span class="number">1000</span>;&#125;&#125;)</span><br><span class="line">  Object.defineProperty(document.getElementById(&#x27;chartOne&#x27;),&#x27;clientHeight&#x27;,&#123;get:function()&#123;return <span class="number">500</span>;&#125;&#125;)</span><br><span class="line">  mychartOne.value = echarts.init(document.getElementById(&#x27;chartOne&#x27;))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="EChart-当同一个页面重复调用该组件，会重复添加clientWidth和clientHeight报错，可以直接在style内添加"><a href="#EChart-当同一个页面重复调用该组件，会重复添加clientWidth和clientHeight报错，可以直接在style内添加" class="headerlink" title="EChart 当同一个页面重复调用该组件，会重复添加clientWidth和clientHeight报错，可以直接在style内添加"></a>EChart 当同一个页面重复调用该组件，会重复添加clientWidth和clientHeight报错，可以直接在style内添加</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;right_chart&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;chartOne&quot;</span> style=<span class="string">&quot;width: 100%;height:400px&quot;</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h1 id="EChart-当更新Y轴的数据源，折线标题不变化，而数据源打印已经变化"><a href="#EChart-当更新Y轴的数据源，折线标题不变化，而数据源打印已经变化" class="headerlink" title="EChart 当更新Y轴的数据源，折线标题不变化，而数据源打印已经变化"></a>EChart 当更新Y轴的数据源，折线标题不变化，而数据源打印已经变化</h1><p>这个问题可能是由于图表的缓存导致的。当你使用setOption方法更新图表时，如果数据源没有发生变化，<br>图表可能会继续使用之前的缓存数据进行渲染，而不是重新获取最新的数据。<br>可以尝试在更新图表之前清除图表的缓存。这可以通过调用clear方法来实现：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">let</span> mychartOne = &#123;&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">lineChartOne</span></span>() &#123;</span><br><span class="line">  mychartOne.value.clear();</span><br><span class="line">  mychartOne.value.setOption(optionOne.value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="EChart-vue3中使用echarts报Uncaught-in-promise-Error-Initialize-failed-invalid-dom-at-Module-init错误"><a href="#EChart-vue3中使用echarts报Uncaught-in-promise-Error-Initialize-failed-invalid-dom-at-Module-init错误" class="headerlink" title="EChart vue3中使用echarts报Uncaught (in promise) Error: Initialize failed: invalid dom. at Module.init错误"></a>EChart vue3中使用echarts报Uncaught (in promise) Error: Initialize failed: invalid dom. at Module.init错误</h1><p>:报这个错误是因为页面还没挂载上开始就加载echart,加一个延时函数，时间视情况而定！仅对于vue3使用echarts亲测有效！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    <span class="built_in">let</span> mychartOne = echarts.init(document.getElementById(<span class="string">&#x27;chartOne&#x27;</span>))</span><br><span class="line">    mychartOne.setOption(optionOne.value)</span><br><span class="line">  &#125;,1000)</span><br></pre></td></tr></table></figure><h1 id="EChart拖拽组件单页面不能放置多个chart：生成一个随机数的ID，并动态绑定id"><a href="#EChart拖拽组件单页面不能放置多个chart：生成一个随机数的ID，并动态绑定id" class="headerlink" title="EChart拖拽组件单页面不能放置多个chart：生成一个随机数的ID，并动态绑定id"></a>EChart拖拽组件单页面不能放置多个chart：生成一个随机数的ID，并动态绑定id</h1><p>：当写死为 id&#x3D;”chartOne” 时，拖拽新的到页面中，每次都绑定第一个</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;right_chart&quot;</span> :<span class="built_in">id</span>=<span class="string">&quot;echarId&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line"><span class="built_in">let</span> echarId = Math.random()</span><br><span class="line"><span class="built_in">let</span> mychartOne = echarts.init(document.getElementById(<span class="string">&#x27;echarId&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="EChart-多条折线图，数据的x轴不一样，且只能有一条x轴"><a href="#EChart-多条折线图，数据的x轴不一样，且只能有一条x轴" class="headerlink" title="EChart 多条折线图，数据的x轴不一样，且只能有一条x轴"></a>EChart 多条折线图，数据的x轴不一样，且只能有一条x轴</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">        text: <span class="string">&#x27;折线图堆叠&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">        trigger: <span class="string">&#x27;axis&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    legend: &#123;</span><br><span class="line">        data: [<span class="string">&#x27;邮件营销&#x27;</span>, <span class="string">&#x27;联盟广告&#x27;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line"> </span><br><span class="line">    xAxis: &#123;</span><br><span class="line">        // 根据x轴数据决定<span class="built_in">type</span>类型</span><br><span class="line">        <span class="built_in">type</span>: <span class="string">&#x27;time&#x27;</span>, </span><br><span class="line">        boundaryGap: <span class="literal">false</span>,</span><br><span class="line">        // 注： x轴不指定data,自动会从series取</span><br><span class="line">    &#125;,</span><br><span class="line">    yAxis: &#123;</span><br><span class="line">        <span class="built_in">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    series: [</span><br><span class="line">         &#123;</span><br><span class="line">            name: <span class="string">&#x27;联盟广告&#x27;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,data: [</span><br><span class="line">                [</span><br><span class="line">                <span class="string">&#x27;2020-11-26 00:00:00&#x27;</span>,</span><br><span class="line">                <span class="string">&quot;6&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="string">&quot;2020-11-26 01:00:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;6&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="string">&quot;2020-11-26 02:00:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;6&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="string">&quot;2020-11-26 03:00:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;5&quot;</span></span><br><span class="line">            ]</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            name: <span class="string">&#x27;邮件营销&#x27;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">            data: [</span><br><span class="line">                [</span><br><span class="line">                <span class="string">&quot;2020-11-26 00:57:00&quot;</span>,</span><br><span class="line">                <span class="string">&quot;17.3&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="string">&quot;2020-11-26 05:22:22&quot;</span>,</span><br><span class="line">                <span class="string">&quot;16.8&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="string">&quot;2020-11-26 08:32:16&quot;</span>,</span><br><span class="line">                <span class="string">&quot;17.3&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="string">&quot;2020-11-26 08:40:57&quot;</span>,</span><br><span class="line">                <span class="string">&quot;17.8&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            [</span><br><span class="line">                <span class="string">&quot;2020-11-26 08:46:54&quot;</span>,</span><br><span class="line">                <span class="string">&quot;18.3&quot;</span></span><br><span class="line">            ]</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">       </span><br><span class="line">    ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="EChart-tooltip-不显示的问题"><a href="#EChart-tooltip-不显示的问题" class="headerlink" title="EChart tooltip 不显示的问题"></a>EChart tooltip 不显示的问题</h1><p>：我是在初始化对象用全局对象存储时无法显示，在方法内部定义变量可以显示，然后将以下改为item就都可以显示了，但是只能在点上hover显示，不是在坐标轴<br>之后我把全局对象用shallowRef定义，就可以用axis啦~<br>和 ref() 不同，浅层 ref 的内部值将会原样存储和暴露，并且不会被深层递归地转为响应式。只有对 .value 的访问是响应式的。<br>shallowRef() 常常用于对大型数据结构的性能优化或是与外部的状态管理系统集成。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tooltip: &#123;</span><br><span class="line">    trigger: <span class="string">&#x27;axis&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">const mychartlList = shallowRef([])</span><br></pre></td></tr></table></figure><h1 id="EChart-作为可重复利用添加的单组件，可以在添加动态id后加下面代码，将该‘元素引用’保存到名为-setRefs-的方法中。e-document-getElementById-‘chartOne’"><a href="#EChart-作为可重复利用添加的单组件，可以在添加动态id后加下面代码，将该‘元素引用’保存到名为-setRefs-的方法中。e-document-getElementById-‘chartOne’" class="headerlink" title="EChart 作为可重复利用添加的单组件，可以在添加动态id后加下面代码，将该‘元素引用’保存到名为 setRefs 的方法中。e&#x3D;document.getElementById(‘chartOne’)"></a>EChart 作为可重复利用添加的单组件，可以在添加动态id后加下面代码，将该‘元素引用’保存到名为 setRefs 的方法中。e&#x3D;document.getElementById(‘chartOne’)</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:ref=<span class="string">&quot;(e) =&gt; setRefs(e)&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Echart </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.下载</title>
      <link href="/2024/04/17/vue3/%E4%B8%8B%E8%BD%BD/"/>
      <url>/2024/04/17/vue3/%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="通过前端自己把获取的数据下载为EXCEL"><a href="#通过前端自己把获取的数据下载为EXCEL" class="headerlink" title="通过前端自己把获取的数据下载为EXCEL"></a>通过前端自己把获取的数据下载为EXCEL</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  <span class="built_in">let</span> downData = []</span><br><span class="line">  //good数组为要下载的表格数据，但是最终要的格式有所改变，需要处理：</span><br><span class="line">  good.value.forEach(item =&gt; &#123;</span><br><span class="line">    <span class="built_in">let</span> res = [];</span><br><span class="line">    console.log(<span class="string">&#x27;item&#x27;</span>,item)</span><br><span class="line">    console.log(<span class="string">&#x27;item.channelNo&#x27;</span>,item.circle)</span><br><span class="line">    console.log(<span class="string">&#x27;item.mode&#x27;</span>,item.mode)</span><br><span class="line">    console.log(<span class="string">&#x27;item.BitRate&#x27;</span>,item.BitRate)</span><br><span class="line">    <span class="built_in">let</span> arr = []</span><br><span class="line">    arr.push(item.no1) //第一列数据</span><br><span class="line">    arr.push(item.satelliteCode)</span><br><span class="line">    downData.push(arr)</span><br><span class="line">  &#125;)</span><br><span class="line">  //宽度</span><br><span class="line">  const options = &#123;</span><br><span class="line">    <span class="string">&#x27;!cols&#x27;</span>: [</span><br><span class="line">      &#123;wpx: 134&#125;,</span><br><span class="line">      &#123;wpx: 134&#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;;</span><br><span class="line">  const exportData = downData.map(item =&gt; &#123;</span><br><span class="line">    <span class="built_in">return</span> &#123;</span><br><span class="line">      <span class="string">&#x27;名称1&#x27;</span>: item[0],</span><br><span class="line">      <span class="string">&#x27;名称2&#x27;</span>: item[1],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">// 创建 Workbook 对象</span><br><span class="line">  const workbook = XLSX.utils.book_new();</span><br><span class="line">// 创建 Worksheet 对象</span><br><span class="line">  const worksheet = XLSX.utils.json_to_sheet(exportData);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (const key <span class="keyword">in</span> worksheet) &#123;</span><br><span class="line">    <span class="keyword">if</span> (worksheet[key] instanceof Object) &#123;</span><br><span class="line">      <span class="keyword">if</span> (worksheet[key].v) &#123;</span><br><span class="line">        worksheet[key].t = <span class="string">&#x27;s&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      worksheet[key].s = &#123;</span><br><span class="line">        alignment: &#123;</span><br><span class="line">          vertical: <span class="string">&#x27;center&#x27;</span>,</span><br><span class="line">          horizontal: <span class="string">&#x27;left&#x27;</span>,</span><br><span class="line">          indent: 0,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  worksheet[<span class="string">&#x27;!cols&#x27;</span>] = options[<span class="string">&#x27;!cols&#x27;</span>]</span><br><span class="line">// 将 Worksheet 添加到 Workbook 中,moment()是获取当前时间</span><br><span class="line">  XLSX.utils.book_append_sheet(workbook, worksheet, <span class="string">&#x27;Sheet1&#x27;</span>);</span><br><span class="line">  const <span class="built_in">tail</span> = <span class="string">&#x27;-&#x27;</span> + moment()</span><br><span class="line">// 生成 Excel 文件并下载</span><br><span class="line"></span><br><span class="line">  XLSX.writeFile(workbook, `下载文件名<span class="variable">$&#123;tail&#125;</span>.xlsx`);</span><br></pre></td></tr></table></figure><h1 id="通过调用接口直接下载："><a href="#通过调用接口直接下载：" class="headerlink" title="通过调用接口直接下载："></a>通过调用接口直接下载：</h1><p>param为传参，最后下载文件名为“名字-当前时间”<br>注：路径前后不加 &#x2F;</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">const <span class="built_in">tail</span> = <span class="string">&#x27;-&#x27;</span> + moment().format(<span class="string">&#x27;YYYYMMDDHHmmss&#x27;</span>)</span><br><span class="line"><span class="built_in">let</span> param = &#123;</span><br><span class="line">    a: queryParams.a,</span><br><span class="line">    b: queryParams.b,</span><br><span class="line">    c: queryParams.c,</span><br><span class="line">    d: queryParams.d</span><br><span class="line">  &#125;</span><br><span class="line">proxy.download(<span class="string">&quot;路径&quot;</span>, &#123;</span><br><span class="line">      ...param,</span><br><span class="line">    &#125;, `名字<span class="variable">$&#123;tail&#125;</span>.xlsx`);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 下载 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.时间</title>
      <link href="/2024/04/17/vue3/%E6%97%B6%E9%97%B4/"/>
      <url>/2024/04/17/vue3/%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="当前时间的几种获取方法"><a href="#当前时间的几种获取方法" class="headerlink" title="当前时间的几种获取方法"></a>当前时间的几种获取方法</h1><p>注：要加格式，不然获取的只是时间戳，人看不懂，表示自1970年1月1日00:00:00（UTC）以来的毫秒数</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">new Date().getTime().format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)</span><br><span class="line">moment().format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="加不同时间的几种获取方法"><a href="#加不同时间的几种获取方法" class="headerlink" title="加不同时间的几种获取方法"></a>加不同时间的几种获取方法</h1><h2 id="当前时间加上分钟，并格式化为-‘YYYY-MM-DD-HH-mm-ss’-的格式"><a href="#当前时间加上分钟，并格式化为-‘YYYY-MM-DD-HH-mm-ss’-的格式" class="headerlink" title="当前时间加上分钟，并格式化为 ‘YYYY-MM-DD HH:mm:ss’ 的格式"></a>当前时间加上分钟，并格式化为 ‘YYYY-MM-DD HH:mm:ss’ 的格式</h2><p>首先使用moment()获取当前时间，然后使用add()方法添加30分钟，最后使用format()方法将时间格式化为指定的格式。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">moment().add(+30, <span class="string">&#x27;minutes&#x27;</span>).format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="当前时间加上天，并格式化为-‘YYYY-MM-DD-HH-mm-ss’-的格式"><a href="#当前时间加上天，并格式化为-‘YYYY-MM-DD-HH-mm-ss’-的格式" class="headerlink" title="当前时间加上天，并格式化为 ‘YYYY-MM-DD HH:mm:ss’ 的格式"></a>当前时间加上天，并格式化为 ‘YYYY-MM-DD HH:mm:ss’ 的格式</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">moment().add(+1, <span class="string">&#x27;day&#x27;</span>).format(<span class="string">&#x27;YYYY-MM-DD HH:mm:ss&#x27;</span>),</span><br></pre></td></tr></table></figure><h1 id="不同格式："><a href="#不同格式：" class="headerlink" title="不同格式："></a>不同格式：</h1><p>1.YYYY-MM-DD HH:mm:ss（分隔型）<br>2.YYYYMMDDHHmmss（紧凑型）</p>]]></content>
      
      
      <categories>
          
          <category> 时间 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2.把本地项目源码推到GitHub远程仓库</title>
      <link href="/2024/04/17/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E6%8A%8A%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8EGitHub%E7%9B%B8%E8%BF%9E%E5%B0%86%E6%BA%90%E7%A0%81%E6%8E%A8%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
      <url>/2024/04/17/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E6%8A%8A%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8EGitHub%E7%9B%B8%E8%BF%9E%E5%B0%86%E6%BA%90%E7%A0%81%E6%8E%A8%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>在第4步后，我运行了git push -u origin master，但是报错让我pull，我这时想起fetch后没看冲突，<br>git status查看有哪里冲突，又让我pull，不成功就执行了5，然后解决冲突后重新提交成功~，个人觉得可能是没解决冲突就push了</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init //git初始化</span><br><span class="line">git fetch //远程仓库获取所有分支的最新数据,但并不会合并或更改你当前的工作分支,此时应该git status查看有哪里冲突然后解决冲突</span><br><span class="line">git branch -u origin/master master //将本地的 master 分支与远程仓库的 master 分支关联起来.-u 参数指定了上游分支,即远程跟踪的分支.这样设置后,可以使用简单的 git pull 或 git push 来同步数据而无需指定远程分支</span><br><span class="line">git remote set-head origin -a //这个命令设置了所有远程分支的 HEAD 引用,使其指向远程仓库的最新提交.-a 参数表示操作应用于所有远程分支</span><br><span class="line">git pull --allow-unrelated-histories</span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&#x27;df&#x27;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> github配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.通过 vite 创建一个 react 项目， 并通过 npm run dev 能在线下环境正确运行</title>
      <link href="/2024/04/17/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAreact%E9%A1%B9%E7%9B%AE/"/>
      <url>/2024/04/17/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAreact%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="前提："><a href="#前提：" class="headerlink" title="前提："></a>前提：</h1><p>1.首先，确保你已经安装了Node.js和npm。你可以在命令行中输入以下命令来检查它们的版本：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>我一开始的node.js版本安装久了点，提示让我更新，什么好几个方案，官网下载啊什么的，麻烦~<br>因为我已经有了这两，直接就在终端用命令更新，没有当时记录，不记得命令了，刚搜的，要是不对可以评论。更新最后版本是v21.7.1：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm cache clean -f</span><br><span class="line">npm install -g n</span><br><span class="line">n latest</span><br></pre></td></tr></table></figure><h1 id="接下来，运行以下命令来创建一个新的React项目："><a href="#接下来，运行以下命令来创建一个新的React项目：" class="headerlink" title="接下来，运行以下命令来创建一个新的React项目："></a>接下来，运行以下命令来创建一个新的React项目：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm create-vite my-project //运行后选择自己要的技术和框架就行</span><br><span class="line"><span class="built_in">cd</span> my-project</span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p>至此，就创建完成了一个属于我们的本地react项目啦<del>如果还想在项目中使用别的技术，请安装相应的依赖即可</del></p>]]></content>
      
      
      <categories>
          
          <category> github配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>如何创建react项目并部署到GitHub pages</title>
      <link href="/2024/04/16/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BAreact%E9%A1%B9%E7%9B%AE%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%20pages/"/>
      <url>/2024/04/16/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BAreact%E9%A1%B9%E7%9B%AE%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%20pages/</url>
      
        <content type="html"><![CDATA[<h1 id="前提："><a href="#前提：" class="headerlink" title="前提："></a>前提：</h1><a href="https://zzpzadie.github.io/2024/04/17/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAreact%E9%A1%B9%E7%9B%AE/?highlight=react%E9%A1%B9%E7%9B%AE" target="_blank">1.你已经通过 create-react-app 创建了一个 react 项目， 并通过 npm run dev 能在线下环境正确运行。</a><br/><a href="https://zzpzadie.github.io/2024/04/17/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E6%8A%8A%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8EGitHub%E7%9B%B8%E8%BF%9E%E5%B0%86%E6%BA%90%E7%A0%81%E6%8E%A8%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/?highlight=%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93" target="_blank">2.在 github 上已经创建了一个与你本地代码同步的分支--存放源码（master)～</a><br/><p>3.在GitHub仓库中–另外创建一个分支部署构建项目（gh-pages）<br>注：不同情况下可能有不同的效果，可以多尝试</p><h1 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h1><p>1.安装 gh-pages</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install gh-pages --save-dev</span><br></pre></td></tr></table></figure><p>2.修改 package.json，添加主页路径homepage，网上有的是用GitHub pages，有的是像下面简单写，但是两种在我这写了好像没区别，就不加赘述。<br>部署的出入口deploy:gh-pages(出口，部署分支)，dist(入口，打包生成的文件夹)，仓库repository</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // ...</span><br><span class="line">  <span class="string">&quot;homepage&quot;</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">  <span class="string">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    // ...</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    // ...</span><br><span class="line">    <span class="string">&quot;deploy&quot;</span>: <span class="string">&quot;gh-pages -d dist&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">   <span class="string">&quot;repository&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;git&quot;</span>,</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://github.com/zzpzadie/test.git&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.修改 vite.config.js,可以先执行后面的部署，如果部署后缺少主路径可以到这里添加,我的就是部署后网页访问接口少了仓库名<br>本来应该是https:&#x2F;&#x2F;用户名.github.io&#x2F;仓库名&#x2F;路径，但是访问的都是https:&#x2F;&#x2F;用户名.github.io&#x2F;路径</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">base:<span class="string">&#x27;/test/&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h1><p>1.Github Pages 无法识别 React 代码，只能识别 html,css,js，故你需要先打包编译你的项目：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>2.你会发现你的项目目录多了一个 build 文件夹，这就是要部署的文件夹，终端执行以下代码：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><p>3.这时 github 上项目就多出了一个gh-pages的分支，在设置中Github Pages处选择gh-pages分支保存，部署完成。<br>过几分钟你再点击生成的链接即可访问你的页面，与线下环境下的页面相同即成功。详情如下：<br><img src="/./image/deployed.png"></p>]]></content>
      
      
      <categories>
          
          <category> github配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>3.如何为GitHub上的项目生成一个可访问的网站</title>
      <link href="/2024/04/11/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E5%A6%82%E4%BD%95%E4%B8%BAGitHub%E4%B8%8A%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%AE%BF%E9%97%AE%E7%9A%84%E7%BD%91%E7%AB%99/"/>
      <url>/2024/04/11/react/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/%E5%A6%82%E4%BD%95%E4%B8%BAGitHub%E4%B8%8A%E7%9A%84%E9%A1%B9%E7%9B%AE%E7%94%9F%E6%88%90%E4%B8%80%E4%B8%AA%E5%8F%AF%E8%AE%BF%E9%97%AE%E7%9A%84%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1 id="创建一个新的仓库"><a href="#创建一个新的仓库" class="headerlink" title="创建一个新的仓库"></a>创建一个新的仓库</h1><p><img src="/./image/cangku.png"></p><h1 id="填上如下信息，注意别勾选错，不然不成功"><a href="#填上如下信息，注意别勾选错，不然不成功" class="headerlink" title="填上如下信息，注意别勾选错，不然不成功"></a>填上如下信息，注意别勾选错，不然不成功</h1><p><img src="/./image/xinxi.png"></p><h1 id="在你所创建的项目界面点击settings-找到githubpages配置，个人分支名可能不同，没关系选则就好，然后刷新即可"><a href="#在你所创建的项目界面点击settings-找到githubpages配置，个人分支名可能不同，没关系选则就好，然后刷新即可" class="headerlink" title="在你所创建的项目界面点击settings,找到githubpages配置，个人分支名可能不同，没关系选则就好，然后刷新即可"></a>在你所创建的项目界面点击settings,找到githubpages配置，个人分支名可能不同，没关系选则就好，然后刷新即可</h1><p><img src="/./image/githubpages.png"></p>]]></content>
      
      
      <categories>
          
          <category> github配置 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>1.CSS的创建</title>
      <link href="/2024/04/10/css%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/04/10/css%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> css学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>博客说明</title>
      <link href="/2024/03/30/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/"/>
      <url>/2024/03/30/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h2 id="本博客只是作者为了记录作者学习中遇到的一些当时不能解决的问题方案，"><a href="#本博客只是作者为了记录作者学习中遇到的一些当时不能解决的问题方案，" class="headerlink" title="本博客只是作者为了记录作者学习中遇到的一些当时不能解决的问题方案，"></a>本博客只是作者为了记录作者学习中遇到的一些当时不能解决的问题方案，</h2><h2 id="或者在此之前没有遇到的技术，将持续更新"><a href="#或者在此之前没有遇到的技术，将持续更新" class="headerlink" title="或者在此之前没有遇到的技术，将持续更新"></a>或者在此之前没有遇到的技术，将持续更新</h2><h3 id="导航栏-搜索：可以搜索文章相关字眼"><a href="#导航栏-搜索：可以搜索文章相关字眼" class="headerlink" title="导航栏-搜索：可以搜索文章相关字眼"></a>导航栏-搜索：可以搜索文章相关字眼</h3><h3 id="导航栏-总览：所有文章"><a href="#导航栏-总览：所有文章" class="headerlink" title="导航栏-总览：所有文章"></a>导航栏-总览：所有文章</h3><h3 id="导航栏-分类：还比较傻瓜，可以看侧边栏"><a href="#导航栏-分类：还比较傻瓜，可以看侧边栏" class="headerlink" title="导航栏-分类：还比较傻瓜，可以看侧边栏"></a>导航栏-分类：还比较傻瓜，可以看侧边栏</h3><h3 id="导航栏-友情链接：不重要"><a href="#导航栏-友情链接：不重要" class="headerlink" title="导航栏-友情链接：不重要"></a>导航栏-友情链接：不重要</h3><p><img src="/./image/haibiantian.jpg" alt="沙滩"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/03/27/hello-world/"/>
      <url>/2024/03/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
